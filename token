// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Token is ERC20, ERC20Burnable, Ownable(msg.sender) {
    constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol) {}

    function mint(address _receiver, uint256 _quantityToMint) external onlyOwner {
        _mint(_receiver, _quantityToMint);
    }

    function burn(uint256 _quantityToBurn) public override {
        _burn(msg.sender, _quantityToBurn);
    }

    function transferCustom(address _to, uint256 _quantityToTransfer) public virtual  returns (bool) {
        _transfer(_msgSender(), _to, _quantityToTransfer);
        return true;
    }
}
